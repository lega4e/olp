#include <iostream>
 
#include <cstring>
struct AdjacMatrix { int n; char *d; inline AdjacMatrix &init() { d = new char[n*n]; return *this; } inline AdjacMatrix &init(int newn) { n = newn; d = new char[n*n]; return *this; } inline AdjacMatrix &zeroize() { memset(d, 0, sizeof(char)*n*n); return *this; } inline AdjacMatrix &free() { delete[] d; return *this; } inline char *operator[](int i) { return d + i*n; } inline const char *operator[](int i) const { return d + i*n; } inline AdjacMatrix &scann(FILE *file = stdin) { fscanf(file, "%i", &n); init(); scan(file); return *this; } AdjacMatrix &scan(FILE *file = stdin) { int input; for(auto *b = d, *e = d+n*n; b != e; ++b) fscanf(file, "%i", &input), *b = input; return *this; } AdjacMatrix &scan_riblist(FILE *file = stdin, bool oriented = false) { int m; fscanf(file, "%i%i", &n, &m); init(); zeroize(); int first, second; for(int i = 0; i < m; ++i) { fscanf(file, "%i%i", &first, &second); d[ n*first + second ] = 1; if(!oriented) d[ n*second + first ] = 1; } return *this; } AdjacMatrix &scan_riblist1(FILE *file = stdin, bool oriented = false) { int m; fscanf(file, "%i%i", &n, &m); init(); zeroize(); int first, second; for(int i = 0; i < m; ++i) { fscanf(file, "%i%i", &first, &second); --first, --second; d[ n*first + second ] = 1; if(!oriented) d[ n*second + first ] = 1; } return *this; } void print(FILE *file = stdout) const { fprintf(file, "%i\n", n); for(int i = 0; i < n; ++i) { for(int j = 0; j < n; ++j) { fprintf(file, "%i ", (int)d[i*n + j]); } fprintf(file, "\n"); } return; } }; using namespace std; char const *INPUT_FILE_NAME = "INPUT.TXT"; char const *OUTPUT_FILE_NAME = "OUTPUT.TXT"; int main( int argc, char *argv[] ) { AdjacMatrix adjm; bool res; { auto file = fopen(INPUT_FILE_NAME, "r"); adjm.scan_riblist1(file, true); fclose(file); } res = true; for(int i = 0; i < adjm.n; ++i) { if( adjm[i][i] ) { res = false; goto output_label; } for(int j = i+1; j < adjm.n; ++j) { if( adjm[i][j] + adjm[j][i] != 1 ) { res = false; goto output_label; } } } output_label: { auto file = fopen(OUTPUT_FILE_NAME, "w"); if(res) fprintf(file, "YES\n"); else fprintf(file, "NO\n"); } return 0; } 
